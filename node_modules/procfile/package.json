{
  "name": "procfile",
  "description": "A simple CLI tool for ensuring that a given node script runs continuously (i.e. forever)",
  "version": "0.1.1",
  "author": {
    "name": "Charlie Robbins",
    "email": "charlie.robbins@gmail.com"
  },
  "repository": {
    "type": "git",
    "url": "http://github.com/indexzero/node-procfile.git"
  },
  "keywords": [
    "tools",
    "procfile",
    "sysadmin"
  ],
  "devDependencies": {
    "async": "0.1.x",
    "vows": "0.5.x"
  },
  "main": "./lib/procfile",
  "scripts": {
    "test": "vows test/*-test.js --spec"
  },
  "engines": {
    "node": ">= 0.4.0"
  },
  "readme": "# node-procfile\n\nA Procfile parser for node.js.\n\n## Installation\n\n### Installing npm (node package manager)\n```\n  curl http://npmjs.org/install.sh | sh\n```\n\n### Installing node-procfile\n```\n  [sudo] npm install procfile\n```\n\n## Usage\nThere are two simple methods when using `node-procfile`: `.parse()` and `.stringify()`. If you are familiar with using the native `JSON` methods in Javascript, there is nothing new about the API.\n\n``` js\n  var fs = require('fs'),\n      procfile = require('procfile');\n  \n  var data = fs.readFileSync('/path/to/procfile').toString(),\n      proc = procfile.parse(data);\n  \n  console.dir(proc)\n```\n\nThis outputs the results of the procfile parse:\n\n``` js\n  {\n    web: {\n      command: 'node',\n      options: [ 'myapp.js', '-p', '80', '--some-option' ]\n    },\n    worker: {\n      command: 'node',\n      options: [ 'myworker.js', '--other-option' ]\n    }\n  }\n```\n\n## Run Tests\n``` bash\n  $ vows --spec\n```\n\n#### Author: [Charlie Robbins][0]\n\n[0]: http://nodejitsu.com",
  "readmeFilename": "README.md",
  "_id": "procfile@0.1.1",
  "_from": "procfile@"
}
